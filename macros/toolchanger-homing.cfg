# Original written by Viesturs Zarins
# Modified by Justin F. Hallett

[homing_override]
axes: xyz
gcode:
  {% if printer.toolchanger.homing_usetap and printer.probe.last_query  %}
    RESPOND TYPE=echo MSG='Z Probe triggered, cannot home.'
  {% else %}
    {% if printer["gcode_macro TOOLCHANGER_HOMING_START"] is defined %}
      TOOLCHANGER_HOMING_START
    {% endif %}
    SET_GCODE_OFFSET X=0.0 Y=0.0 Z=0.0
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

    G90 ; absolute mode
    {% if 'z' not in printer.toolhead.homed_axes %}
      SET_KINEMATIC_POSITION Z=0
      G0 Z10 F1000
    {% elif printer.toolhead.position[2]|float < 10 %}
      G0 Z10 F1000
    {% endif %}

    {% if home_all or 'Y' in params or 'X' in params %}
      {% if printer.toolchanger.sensorless_y %}
        _SENSORLESS_HOME AXIS=Y
      {% else %}
        G28 Y
      {% endif %}
    {% endif %}

    {% if home_all or 'X' in params %}
      G90 ; absolute mode
      G0 Y{ max_y - 20 } F6000
      {% if printer.toolchanger.sensorless_x %}
        _SENSORLESS_HOME AXIS=X
      {% else %}
        G28 X
      {% endif %}
      G91 ; relative mode
      G0 X-10 F6000
    {% endif %}

    {% if home_all or 'Z' in params %}
      {% if printer["gcode_macro TOOLCHANGER_ZSWITCH"] is defined %}
        G90 ; absolute mode
        G0 X{printer["gcode_macro TOOLCHANGER_ZSWITCH"].x} Y{printer["gcode_macro TOOLCHANGER_ZSWITCH"].y} F12000
        G28 Z
        G0 Z10 F6000
        _MOVE_TO_CENTER
      {% endif %}

      {% if params.NOPROBE is not defined %}
        INITIALIZE_TOOLCHANGER
        STOP_TOOL_PROBE_CRASH_DETECTION

        G0 Z10 F6000
        _MOVE_TO_CENTER

        {% if params.CLEAN is defined %}
          {% if printer["gcode_macro TOOLCHANGER_CLEAN_NOZZLE"] is defined %}
            TOOLCHANGER_CLEAN_NOZZLE
          {% endif %}
        {% endif %}

        {% if printer.toolchanger.homing_usetap %}
          PROBE
          _SAVE_PROBE_RESULT
        {% endif %}
        ; DO NOT MOVE Z YET
        _ADJUST_Z_HOME_FOR_TOOL_OFFSET
      {% endif %}

      _APPLY_ACTIVE_TOOL_GCODE_OFFSETS
      _MOVE_TO_CENTER
    {% endif %}
    M400
    {% if printer["gcode_macro TOOLCHANGER_HOMING_END"] is defined %}
      TOOLCHANGER_HOMING_END
    {% endif %}
  {% endif %}


[gcode_macro _MOVE_TO_CENTER]
gcode:
  {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
  {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}
  G0 X{max_x//2} Y{max_y//2} F12000


[gcode_macro _SENSORLESS_HOME]
gcode:
  {% set axis = param.AXIS|default('X')|string %}

  # Always use consistent run_current on A/B steppers during sensorless homing
  {% set RUN_CURRENT_X = printer.configfile.settings['{printer.toolchanger.stepper_x_driver} stepper_x'].run_current|float %}
  {% set RUN_CURRENT_Y = printer.configfile.settings['{printer.toolchanger.stepper_y_driver} stepper_y'].run_current|float %}
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.toolchanger.homing_current}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.toolchanger.homing_current}

  # Home
  G28 {axis|upper}
  # Move away
  G91
  G1 {axis|upper}-10 F1200
    
  # Wait just a secondâ€¦ (give StallGuard registers time to clear)
  G4 P1000
  # Set current during print
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


; Depending on the selected tool at the time of homing, the physical Z endstop position is offset.
; This corrects for that using current tool offset.
[gcode_macro _ADJUST_Z_HOME_FOR_TOOL_OFFSET]
gcode:
  G90 ; absolute mode
  G0 Z10 F1000
  {% set tool = printer.toolchanger.tool %}
  {% if tool %}
    {% set tool_z_offset = printer[tool].gcode_z_offset|default(0)|float %}
    {% set probe_z_offset = printer.tool_probe_endstop.active_tool_probe_z_offset|default(0)|float %}
    SET_KINEMATIC_POSITION Z={10.0+tool_z_offset|float+probe_z_offset|float}
  {% endif %}


[gcode_macro _APPLY_ACTIVE_TOOL_GCODE_OFFSETS]
gcode:
  ; Apply gcode offsets
  {% set tool = printer.toolchanger.tool %}
  {% if tool %}
    SET_GCODE_OFFSET X={printer[tool].gcode_x_offset} Y={printer[tool].gcode_y_offset} Z={printer[tool].gcode_z_offset}
  {% endif %}


[gcode_macro TOOL_BED_MESH_CALIBRATE]
gcode:
  {% set tool_z_offset = printer[printer.toolchanger.tool].gcode_z_offset %}
  G90 ; absolute mode
  G0 Z10 F1000
  # Bed mesh knows about the probe offset, but not about the tool offset.
  SET_KINEMATIC_POSITION Z={10.0-tool_z_offset|float}
  BED_MESH_CALIBRATE
  G0 Z10 F1000
  SET_KINEMATIC_POSITION Z={10.0+tool_z_offset|float}


; From EiNSTieN 
; https://github.com/EiNSTeiN-/Voron_2.4r2/blob/main/config/tapchanger/macros/homing.cfg
[gcode_macro _SAVE_PROBE_RESULT]
variable_probe_z_result: 0.0
gcode:
  RESPOND type=command MSG='Probed Z: { printer.probe.last_z_result }'
  SET_GCODE_VARIABLE MACRO=_SAVE_PROBE_RESULT VARIABLE=probe_z_result VALUE={ printer.probe.last_z_result|float }
